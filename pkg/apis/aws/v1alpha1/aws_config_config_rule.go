// GENERATED BY TF-GENERATOR, DO NOT EDIT.

package v1alpha1

import (
	meta_v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +genclient:noStatus
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

type AwsConfigConfigRule struct {
	meta_v1.TypeMeta   `json",inline"`
	meta_v1.ObjectMeta `json"metadata,omitempty"`
	Spec               AwsConfigConfigRuleSpec `json"spec"`
}

type AwsConfigConfigRuleSpec struct {
	Arn                       string                          `json:"arn"`
	Description               string                          `json:"description"`
	InputParameters           string                          `json:"input_parameters"`
	MaximumExecutionFrequency string                          `json:"maximum_execution_frequency"`
	Scope                     []AwsConfigConfigRuleSpecScope  `json:"scope"`
	Source                    []AwsConfigConfigRuleSpecSource `json:"source"`
	Name                      string                          `json:"name"`
	RuleId                    string                          `json:"rule_id"`
}

type AwsConfigConfigRuleSpecScope struct {
	TagKey                  string `json:"tag_key"`
	TagValue                string `json:"tag_value"`
	ComplianceResourceId    string `json:"compliance_resource_id"`
	ComplianceResourceTypes string `json:"compliance_resource_types"`
}

type AwsConfigConfigRuleSpecSource struct {
	Owner            string                                    `json:"owner"`
	SourceDetail     AwsConfigConfigRuleSpecSourceSourceDetail `json:"source_detail"`
	SourceIdentifier string                                    `json:"source_identifier"`
}

type AwsConfigConfigRuleSpecSourceSourceDetail struct {
	MaximumExecutionFrequency string `json:"maximum_execution_frequency"`
	MessageType               string `json:"message_type"`
	EventSource               string `json:"event_source"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

type AwsConfigConfigRuleList struct {
	meta_v1.TypeMeta   `json",inline"`
	meta_v1.ObjectMeta `json"metadata,omitempty"`
	Items              []AwsConfigConfigRule `json"items"`
}
