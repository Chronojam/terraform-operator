// GENERATED BY TF-GENERATOR, DO NOT EDIT.

package v1alpha1

import (
	meta_v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +genclient:noStatus
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

type AwsLb struct {
	meta_v1.TypeMeta   `json",inline"`
	meta_v1.ObjectMeta `json"metadata,omitempty"`
	Spec               AwsLbSpec `json"spec"`
}

type AwsLbSpec struct {
	DnsName                      string                 `json:"dns_name"`
	Tags                         map[string]string      `json:"tags"`
	Internal                     bool                   `json:"internal"`
	IdleTimeout                  int                    `json:"idle_timeout"`
	EnableHttp2                  bool                   `json:"enable_http2"`
	ZoneId                       string                 `json:"zone_id"`
	Arn                          string                 `json:"arn"`
	SecurityGroups               string                 `json:"security_groups"`
	EnableDeletionProtection     bool                   `json:"enable_deletion_protection"`
	IpAddressType                string                 `json:"ip_address_type"`
	AccessLogs                   []AwsLbSpecAccessLogs  `json:"access_logs"`
	VpcId                        string                 `json:"vpc_id"`
	ArnSuffix                    string                 `json:"arn_suffix"`
	Name                         string                 `json:"name"`
	LoadBalancerType             string                 `json:"load_balancer_type"`
	SubnetMapping                AwsLbSpecSubnetMapping `json:"subnet_mapping"`
	NamePrefix                   string                 `json:"name_prefix"`
	Subnets                      string                 `json:"subnets"`
	EnableCrossZoneLoadBalancing bool                   `json:"enable_cross_zone_load_balancing"`
}

type AwsLbSpecAccessLogs struct {
	Prefix  string `json:"prefix"`
	Enabled bool   `json:"enabled"`
	Bucket  string `json:"bucket"`
}

type AwsLbSpecSubnetMapping struct {
	SubnetId     string `json:"subnet_id"`
	AllocationId string `json:"allocation_id"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

type AwsLbList struct {
	meta_v1.TypeMeta   `json",inline"`
	meta_v1.ObjectMeta `json"metadata,omitempty"`
	Items              []AwsLb `json"items"`
}
