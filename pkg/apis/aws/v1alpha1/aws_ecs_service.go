// GENERATED BY TF-GENERATOR, DO NOT EDIT.

package v1alpha1

import (
	meta_v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +genclient:noStatus
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

type AwsEcsService struct {
	meta_v1.TypeMeta   `json",inline"`
	meta_v1.ObjectMeta `json"metadata,omitempty"`
	Spec               AwsEcsServiceSpec `json"spec"`
}

type AwsEcsServiceSpec struct {
	DeploymentMaximumPercent        int                                         `json:"deployment_maximum_percent"`
	DeploymentMinimumHealthyPercent int                                         `json:"deployment_minimum_healthy_percent"`
	IamRole                         string                                      `json:"iam_role"`
	NetworkConfiguration            []AwsEcsServiceSpecNetworkConfiguration     `json:"network_configuration"`
	PlacementStrategy               AwsEcsServiceSpecPlacementStrategy          `json:"placement_strategy"`
	PlacementConstraints            AwsEcsServiceSpecPlacementConstraints       `json:"placement_constraints"`
	Cluster                         string                                      `json:"cluster"`
	TaskDefinition                  string                                      `json:"task_definition"`
	LaunchType                      string                                      `json:"launch_type"`
	Name                            string                                      `json:"name"`
	HealthCheckGracePeriodSeconds   int                                         `json:"health_check_grace_period_seconds"`
	LoadBalancer                    AwsEcsServiceSpecLoadBalancer               `json:"load_balancer"`
	OrderedPlacementStrategy        []AwsEcsServiceSpecOrderedPlacementStrategy `json:"ordered_placement_strategy"`
	ServiceRegistries               AwsEcsServiceSpecServiceRegistries          `json:"service_registries"`
	DesiredCount                    int                                         `json:"desired_count"`
}

type AwsEcsServiceSpecNetworkConfiguration struct {
	SecurityGroups string `json:"security_groups"`
	Subnets        string `json:"subnets"`
	AssignPublicIp bool   `json:"assign_public_ip"`
}

type AwsEcsServiceSpecPlacementStrategy struct {
	Type  string `json:"type"`
	Field string `json:"field"`
}

type AwsEcsServiceSpecPlacementConstraints struct {
	Type       string `json:"type"`
	Expression string `json:"expression"`
}

type AwsEcsServiceSpecLoadBalancer struct {
	ElbName        string `json:"elb_name"`
	TargetGroupArn string `json:"target_group_arn"`
	ContainerName  string `json:"container_name"`
	ContainerPort  int    `json:"container_port"`
}

type AwsEcsServiceSpecOrderedPlacementStrategy struct {
	Type  string `json:"type"`
	Field string `json:"field"`
}

type AwsEcsServiceSpecServiceRegistries struct {
	Port        int    `json:"port"`
	RegistryArn string `json:"registry_arn"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

type AwsEcsServiceList struct {
	meta_v1.TypeMeta   `json",inline"`
	meta_v1.ObjectMeta `json"metadata,omitempty"`
	Items              []AwsEcsService `json"items"`
}
