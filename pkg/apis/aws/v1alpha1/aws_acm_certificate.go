// GENERATED BY TF-GENERATOR, DO NOT EDIT.

package v1alpha1

import (
	meta_v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +genclient:noStatus
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

type AwsAcmCertificate struct {
	meta_v1.TypeMeta   `json:",inline"`
	meta_v1.ObjectMeta `json:"metadata,omitempty"`
	Spec               AwsAcmCertificateSpec `json:"spec"`
}

type AwsAcmCertificateSpec struct {
	ValidationEmails        []string                                       `json:"validation_emails"`
	Tags                    map[string]string                              `json:"tags"`
	DomainName              string                                         `json:"domain_name"`
	SubjectAlternativeNames []string                                       `json:"subject_alternative_names"`
	ValidationMethod        string                                         `json:"validation_method"`
	Arn                     string                                         `json:"arn"`
	DomainValidationOptions []AwsAcmCertificateSpecDomainValidationOptions `json:"domain_validation_options"`
}

type AwsAcmCertificateSpecDomainValidationOptions struct {
	ResourceRecordValue string `json:"resource_record_value"`
	DomainName          string `json:"domain_name"`
	ResourceRecordName  string `json:"resource_record_name"`
	ResourceRecordType  string `json:"resource_record_type"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

type AwsAcmCertificateList struct {
	meta_v1.TypeMeta `json:",inline"`
	meta_v1.ListMeta `json:"metadata,omitempty"`
	Items            []AwsAcmCertificate `json:"items"`
}
