// GENERATED BY TF-GENERATOR, DO NOT EDIT.

package v1alpha1

import (
	meta_v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +genclient:noStatus
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

type AwsRdsCluster struct {
	meta_v1.TypeMeta   `json:",inline"`
	meta_v1.ObjectMeta `json:"metadata,omitempty"`
	Spec               AwsRdsClusterSpec `json:"spec"`
}

type AwsRdsClusterSpec struct {
	DbClusterParameterGroupName      string                      `json:"db_cluster_parameter_group_name"`
	FinalSnapshotIdentifier          string                      `json:"final_snapshot_identifier"`
	BackupRetentionPeriod            int                         `json:"backup_retention_period"`
	Engine                           string                      `json:"engine"`
	KmsKeyId                         string                      `json:"kms_key_id"`
	IamDatabaseAuthenticationEnabled bool                        `json:"iam_database_authentication_enabled"`
	ClusterResourceId                string                      `json:"cluster_resource_id"`
	DatabaseName                     string                      `json:"database_name"`
	DbSubnetGroupName                string                      `json:"db_subnet_group_name"`
	HostedZoneId                     string                      `json:"hosted_zone_id"`
	SnapshotIdentifier               string                      `json:"snapshot_identifier"`
	PreferredBackupWindow            string                      `json:"preferred_backup_window"`
	ClusterIdentifier                string                      `json:"cluster_identifier"`
	ClusterIdentifierPrefix          string                      `json:"cluster_identifier_prefix"`
	ClusterMembers                   string                      `json:"cluster_members"`
	MasterPassword                   string                      `json:"master_password"`
	EngineVersion                    string                      `json:"engine_version"`
	AvailabilityZones                string                      `json:"availability_zones"`
	Endpoint                         string                      `json:"endpoint"`
	ReplicationSourceIdentifier      string                      `json:"replication_source_identifier"`
	ReaderEndpoint                   string                      `json:"reader_endpoint"`
	ApplyImmediately                 bool                        `json:"apply_immediately"`
	VpcSecurityGroupIds              string                      `json:"vpc_security_group_ids"`
	PreferredMaintenanceWindow       string                      `json:"preferred_maintenance_window"`
	IamRoles                         string                      `json:"iam_roles"`
	StorageEncrypted                 bool                        `json:"storage_encrypted"`
	S3Import                         []AwsRdsClusterSpecS3Import `json:"s3_import"`
	SkipFinalSnapshot                bool                        `json:"skip_final_snapshot"`
	MasterUsername                   string                      `json:"master_username"`
	Port                             int                         `json:"port"`
	SourceRegion                     string                      `json:"source_region"`
	Tags                             map[string]string           `json:"tags"`
}

type AwsRdsClusterSpecS3Import struct {
	IngestionRole       string `json:"ingestion_role"`
	SourceEngine        string `json:"source_engine"`
	SourceEngineVersion string `json:"source_engine_version"`
	BucketName          string `json:"bucket_name"`
	BucketPrefix        string `json:"bucket_prefix"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

type AwsRdsClusterList struct {
	meta_v1.TypeMeta `json:",inline"`
	meta_v1.ListMeta `json:"metadata,omitempty"`
	Items            []AwsRdsCluster `json:"items"`
}
