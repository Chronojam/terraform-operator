// GENERATED BY TF-GENERATOR, DO NOT EDIT.

package v1alpha1

import (
	meta_v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +genclient:noStatus
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

type AwsCodepipeline struct {
	meta_v1.TypeMeta   `json",inline"`
	meta_v1.ObjectMeta `json"metadata,omitempty"`
	Spec               AwsCodepipelineSpec `json"spec"`
}

type AwsCodepipelineSpec struct {
	ArtifactStore []AwsCodepipelineSpecArtifactStore `json:"artifact_store"`
	Stage         []AwsCodepipelineSpecStage         `json:"stage"`
	Arn           string                             `json:"arn"`
	Name          string                             `json:"name"`
	RoleArn       string                             `json:"role_arn"`
}

type AwsCodepipelineSpecArtifactStore struct {
	Location      string                                          `json:"location"`
	Type          string                                          `json:"type"`
	EncryptionKey []AwsCodepipelineSpecArtifactStoreEncryptionKey `json:"encryption_key"`
}

type AwsCodepipelineSpecArtifactStoreEncryptionKey struct {
	Id   string `json:"id"`
	Type string `json:"type"`
}

type AwsCodepipelineSpecStage struct {
	Name   string                           `json:"name"`
	Action []AwsCodepipelineSpecStageAction `json:"action"`
}

type AwsCodepipelineSpecStageAction struct {
	Category        string            `json:"category"`
	Version         string            `json:"version"`
	InputArtifacts  []string          `json:"input_artifacts"`
	OutputArtifacts []string          `json:"output_artifacts"`
	RunOrder        int               `json:"run_order"`
	Configuration   map[string]string `json:"configuration"`
	Owner           string            `json:"owner"`
	Provider        string            `json:"provider"`
	Name            string            `json:"name"`
	RoleArn         string            `json:"role_arn"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

type AwsCodepipelineList struct {
	meta_v1.TypeMeta   `json",inline"`
	meta_v1.ObjectMeta `json"metadata,omitempty"`
	Items              []AwsCodepipeline `json"items"`
}
