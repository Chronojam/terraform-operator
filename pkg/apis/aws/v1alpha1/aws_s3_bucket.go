// GENERATED BY TF-GENERATOR, DO NOT EDIT.

package v1alpha1

import (
	meta_v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +genclient:noStatus
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

type AwsS3Bucket struct {
	meta_v1.TypeMeta   `json",inline"`
	meta_v1.ObjectMeta `json"metadata,omitempty"`
	Spec               AwsS3BucketSpec `json"spec"`
}

type AwsS3BucketSpec struct {
	Versioning                        []AwsS3BucketSpecVersioning                        `json:"versioning"`
	Bucket                            string                                             `json:"bucket"`
	Acl                               string                                             `json:"acl"`
	Website                           []AwsS3BucketSpecWebsite                           `json:"website"`
	Region                            string                                             `json:"region"`
	WebsiteDomain                     string                                             `json:"website_domain"`
	Logging                           AwsS3BucketSpecLogging                             `json:"logging"`
	RequestPayer                      string                                             `json:"request_payer"`
	ServerSideEncryptionConfiguration []AwsS3BucketSpecServerSideEncryptionConfiguration `json:"server_side_encryption_configuration"`
	BucketPrefix                      string                                             `json:"bucket_prefix"`
	BucketDomainName                  string                                             `json:"bucket_domain_name"`
	Arn                               string                                             `json:"arn"`
	CorsRule                          []AwsS3BucketSpecCorsRule                          `json:"cors_rule"`
	ReplicationConfiguration          []AwsS3BucketSpecReplicationConfiguration          `json:"replication_configuration"`
	Policy                            string                                             `json:"policy"`
	HostedZoneId                      string                                             `json:"hosted_zone_id"`
	WebsiteEndpoint                   string                                             `json:"website_endpoint"`
	ForceDestroy                      bool                                               `json:"force_destroy"`
	LifecycleRule                     []AwsS3BucketSpecLifecycleRule                     `json:"lifecycle_rule"`
	AccelerationStatus                string                                             `json:"acceleration_status"`
	Tags                              map[string]string                                  `json:"tags"`
}

type AwsS3BucketSpecVersioning struct {
	MfaDelete bool `json:"mfa_delete"`
	Enabled   bool `json:"enabled"`
}

type AwsS3BucketSpecWebsite struct {
	IndexDocument         string `json:"index_document"`
	ErrorDocument         string `json:"error_document"`
	RedirectAllRequestsTo string `json:"redirect_all_requests_to"`
	RoutingRules          string `json:"routing_rules"`
}

type AwsS3BucketSpecLogging struct {
	TargetBucket string `json:"target_bucket"`
	TargetPrefix string `json:"target_prefix"`
}

type AwsS3BucketSpecServerSideEncryptionConfiguration struct {
	Rule []AwsS3BucketSpecServerSideEncryptionConfigurationRule `json:"rule"`
}

type AwsS3BucketSpecServerSideEncryptionConfigurationRule struct {
	ApplyServerSideEncryptionByDefault []AwsS3BucketSpecServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault `json:"apply_server_side_encryption_by_default"`
}

type AwsS3BucketSpecServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault struct {
	KmsMasterKeyId string `json:"kms_master_key_id"`
	SseAlgorithm   string `json:"sse_algorithm"`
}

type AwsS3BucketSpecCorsRule struct {
	AllowedHeaders []string `json:"allowed_headers"`
	AllowedMethods []string `json:"allowed_methods"`
	AllowedOrigins []string `json:"allowed_origins"`
	ExposeHeaders  []string `json:"expose_headers"`
	MaxAgeSeconds  int      `json:"max_age_seconds"`
}

type AwsS3BucketSpecReplicationConfiguration struct {
	Role  string                                       `json:"role"`
	Rules AwsS3BucketSpecReplicationConfigurationRules `json:"rules"`
}

type AwsS3BucketSpecReplicationConfigurationRules struct {
	Id                      string                                                              `json:"id"`
	Destination             AwsS3BucketSpecReplicationConfigurationRulesDestination             `json:"destination"`
	SourceSelectionCriteria AwsS3BucketSpecReplicationConfigurationRulesSourceSelectionCriteria `json:"source_selection_criteria"`
	Prefix                  string                                                              `json:"prefix"`
	Status                  string                                                              `json:"status"`
}

type AwsS3BucketSpecReplicationConfigurationRulesDestination struct {
	Bucket          string `json:"bucket"`
	StorageClass    string `json:"storage_class"`
	ReplicaKmsKeyId string `json:"replica_kms_key_id"`
}

type AwsS3BucketSpecReplicationConfigurationRulesSourceSelectionCriteria struct {
	SseKmsEncryptedObjects AwsS3BucketSpecReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjects `json:"sse_kms_encrypted_objects"`
}

type AwsS3BucketSpecReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjects struct {
	Enabled bool `json:"enabled"`
}

type AwsS3BucketSpecLifecycleRule struct {
	Enabled                            bool                                                    `json:"enabled"`
	NoncurrentVersionExpiration        AwsS3BucketSpecLifecycleRuleNoncurrentVersionExpiration `json:"noncurrent_version_expiration"`
	Transition                         AwsS3BucketSpecLifecycleRuleTransition                  `json:"transition"`
	Id                                 string                                                  `json:"id"`
	Prefix                             string                                                  `json:"prefix"`
	Tags                               map[string]string                                       `json:"tags"`
	AbortIncompleteMultipartUploadDays int                                                     `json:"abort_incomplete_multipart_upload_days"`
	Expiration                         AwsS3BucketSpecLifecycleRuleExpiration                  `json:"expiration"`
	NoncurrentVersionTransition        AwsS3BucketSpecLifecycleRuleNoncurrentVersionTransition `json:"noncurrent_version_transition"`
}

type AwsS3BucketSpecLifecycleRuleNoncurrentVersionExpiration struct {
	Days int `json:"days"`
}

type AwsS3BucketSpecLifecycleRuleTransition struct {
	StorageClass string `json:"storage_class"`
	Date         string `json:"date"`
	Days         int    `json:"days"`
}

type AwsS3BucketSpecLifecycleRuleExpiration struct {
	Date                      string `json:"date"`
	Days                      int    `json:"days"`
	ExpiredObjectDeleteMarker bool   `json:"expired_object_delete_marker"`
}

type AwsS3BucketSpecLifecycleRuleNoncurrentVersionTransition struct {
	Days         int    `json:"days"`
	StorageClass string `json:"storage_class"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

type AwsS3BucketList struct {
	meta_v1.TypeMeta   `json",inline"`
	meta_v1.ObjectMeta `json"metadata,omitempty"`
	Items              []AwsS3Bucket `json"items"`
}
