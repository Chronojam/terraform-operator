// GENERATED BY TF-GENERATOR, DO NOT EDIT.

package v1alpha1

import (
	meta_v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +genclient:noStatus
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

type AwsCodedeployDeploymentGroup struct {
	meta_v1.TypeMeta   `json",inline"`
	meta_v1.ObjectMeta `json"metadata,omitempty"`
	Spec               AwsCodedeployDeploymentGroupSpec `json"spec"`
}

type AwsCodedeployDeploymentGroupSpec struct {
	OnPremisesInstanceTagFilter AwsCodedeployDeploymentGroupSpecOnPremisesInstanceTagFilter `json:"on_premises_instance_tag_filter"`
	TriggerConfiguration        AwsCodedeployDeploymentGroupSpecTriggerConfiguration        `json:"trigger_configuration"`
	AppName                     string                                                      `json:"app_name"`
	LoadBalancerInfo            []AwsCodedeployDeploymentGroupSpecLoadBalancerInfo          `json:"load_balancer_info"`
	Ec2TagSet                   AwsCodedeployDeploymentGroupSpecEc2TagSet                   `json:"ec2_tag_set"`
	Ec2TagFilter                AwsCodedeployDeploymentGroupSpecEc2TagFilter                `json:"ec2_tag_filter"`
	BlueGreenDeploymentConfig   []AwsCodedeployDeploymentGroupSpecBlueGreenDeploymentConfig `json:"blue_green_deployment_config"`
	AutoscalingGroups           string                                                      `json:"autoscaling_groups"`
	DeploymentConfigName        string                                                      `json:"deployment_config_name"`
	AlarmConfiguration          []AwsCodedeployDeploymentGroupSpecAlarmConfiguration        `json:"alarm_configuration"`
	DeploymentGroupName         string                                                      `json:"deployment_group_name"`
	DeploymentStyle             []AwsCodedeployDeploymentGroupSpecDeploymentStyle           `json:"deployment_style"`
	ServiceRoleArn              string                                                      `json:"service_role_arn"`
	AutoRollbackConfiguration   []AwsCodedeployDeploymentGroupSpecAutoRollbackConfiguration `json:"auto_rollback_configuration"`
}

type AwsCodedeployDeploymentGroupSpecOnPremisesInstanceTagFilter struct {
	Key   string `json:"key"`
	Type  string `json:"type"`
	Value string `json:"value"`
}

type AwsCodedeployDeploymentGroupSpecTriggerConfiguration struct {
	TriggerEvents    string `json:"trigger_events"`
	TriggerName      string `json:"trigger_name"`
	TriggerTargetArn string `json:"trigger_target_arn"`
}

type AwsCodedeployDeploymentGroupSpecLoadBalancerInfo struct {
	ElbInfo         AwsCodedeployDeploymentGroupSpecLoadBalancerInfoElbInfo         `json:"elb_info"`
	TargetGroupInfo AwsCodedeployDeploymentGroupSpecLoadBalancerInfoTargetGroupInfo `json:"target_group_info"`
}

type AwsCodedeployDeploymentGroupSpecLoadBalancerInfoElbInfo struct {
	Name string `json:"name"`
}

type AwsCodedeployDeploymentGroupSpecLoadBalancerInfoTargetGroupInfo struct {
	Name string `json:"name"`
}

type AwsCodedeployDeploymentGroupSpecEc2TagSet struct {
	Ec2TagFilter AwsCodedeployDeploymentGroupSpecEc2TagSetEc2TagFilter `json:"ec2_tag_filter"`
}

type AwsCodedeployDeploymentGroupSpecEc2TagSetEc2TagFilter struct {
	Type  string `json:"type"`
	Value string `json:"value"`
	Key   string `json:"key"`
}

type AwsCodedeployDeploymentGroupSpecEc2TagFilter struct {
	Key   string `json:"key"`
	Type  string `json:"type"`
	Value string `json:"value"`
}

type AwsCodedeployDeploymentGroupSpecBlueGreenDeploymentConfig struct {
	DeploymentReadyOption                     []AwsCodedeployDeploymentGroupSpecBlueGreenDeploymentConfigDeploymentReadyOption                     `json:"deployment_ready_option"`
	GreenFleetProvisioningOption              []AwsCodedeployDeploymentGroupSpecBlueGreenDeploymentConfigGreenFleetProvisioningOption              `json:"green_fleet_provisioning_option"`
	TerminateBlueInstancesOnDeploymentSuccess []AwsCodedeployDeploymentGroupSpecBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccess `json:"terminate_blue_instances_on_deployment_success"`
}

type AwsCodedeployDeploymentGroupSpecBlueGreenDeploymentConfigDeploymentReadyOption struct {
	ActionOnTimeout   string `json:"action_on_timeout"`
	WaitTimeInMinutes int    `json:"wait_time_in_minutes"`
}

type AwsCodedeployDeploymentGroupSpecBlueGreenDeploymentConfigGreenFleetProvisioningOption struct {
	Action string `json:"action"`
}

type AwsCodedeployDeploymentGroupSpecBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccess struct {
	Action                       string `json:"action"`
	TerminationWaitTimeInMinutes int    `json:"termination_wait_time_in_minutes"`
}

type AwsCodedeployDeploymentGroupSpecAlarmConfiguration struct {
	IgnorePollAlarmFailure bool   `json:"ignore_poll_alarm_failure"`
	Alarms                 string `json:"alarms"`
	Enabled                bool   `json:"enabled"`
}

type AwsCodedeployDeploymentGroupSpecDeploymentStyle struct {
	DeploymentOption string `json:"deployment_option"`
	DeploymentType   string `json:"deployment_type"`
}

type AwsCodedeployDeploymentGroupSpecAutoRollbackConfiguration struct {
	Enabled bool   `json:"enabled"`
	Events  string `json:"events"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

type AwsCodedeployDeploymentGroupList struct {
	meta_v1.TypeMeta   `json",inline"`
	meta_v1.ObjectMeta `json"metadata,omitempty"`
	Items              []AwsCodedeployDeploymentGroup `json"items"`
}
