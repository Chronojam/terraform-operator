/*
Copyright 2018 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/chronojam/terraform-operator/pkg/apis/aws/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsAcmpcaCertificateAuthorityLister helps list AwsAcmpcaCertificateAuthorities.
type AwsAcmpcaCertificateAuthorityLister interface {
	// List lists all AwsAcmpcaCertificateAuthorities in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.AwsAcmpcaCertificateAuthority, err error)
	// AwsAcmpcaCertificateAuthorities returns an object that can list and get AwsAcmpcaCertificateAuthorities.
	AwsAcmpcaCertificateAuthorities(namespace string) AwsAcmpcaCertificateAuthorityNamespaceLister
	AwsAcmpcaCertificateAuthorityListerExpansion
}

// awsAcmpcaCertificateAuthorityLister implements the AwsAcmpcaCertificateAuthorityLister interface.
type awsAcmpcaCertificateAuthorityLister struct {
	indexer cache.Indexer
}

// NewAwsAcmpcaCertificateAuthorityLister returns a new AwsAcmpcaCertificateAuthorityLister.
func NewAwsAcmpcaCertificateAuthorityLister(indexer cache.Indexer) AwsAcmpcaCertificateAuthorityLister {
	return &awsAcmpcaCertificateAuthorityLister{indexer: indexer}
}

// List lists all AwsAcmpcaCertificateAuthorities in the indexer.
func (s *awsAcmpcaCertificateAuthorityLister) List(selector labels.Selector) (ret []*v1alpha1.AwsAcmpcaCertificateAuthority, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AwsAcmpcaCertificateAuthority))
	})
	return ret, err
}

// AwsAcmpcaCertificateAuthorities returns an object that can list and get AwsAcmpcaCertificateAuthorities.
func (s *awsAcmpcaCertificateAuthorityLister) AwsAcmpcaCertificateAuthorities(namespace string) AwsAcmpcaCertificateAuthorityNamespaceLister {
	return awsAcmpcaCertificateAuthorityNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsAcmpcaCertificateAuthorityNamespaceLister helps list and get AwsAcmpcaCertificateAuthorities.
type AwsAcmpcaCertificateAuthorityNamespaceLister interface {
	// List lists all AwsAcmpcaCertificateAuthorities in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.AwsAcmpcaCertificateAuthority, err error)
	// Get retrieves the AwsAcmpcaCertificateAuthority from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.AwsAcmpcaCertificateAuthority, error)
	AwsAcmpcaCertificateAuthorityNamespaceListerExpansion
}

// awsAcmpcaCertificateAuthorityNamespaceLister implements the AwsAcmpcaCertificateAuthorityNamespaceLister
// interface.
type awsAcmpcaCertificateAuthorityNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsAcmpcaCertificateAuthorities in the indexer for a given namespace.
func (s awsAcmpcaCertificateAuthorityNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AwsAcmpcaCertificateAuthority, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AwsAcmpcaCertificateAuthority))
	})
	return ret, err
}

// Get retrieves the AwsAcmpcaCertificateAuthority from the indexer for a given namespace and name.
func (s awsAcmpcaCertificateAuthorityNamespaceLister) Get(name string) (*v1alpha1.AwsAcmpcaCertificateAuthority, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("awsacmpcacertificateauthority"), name)
	}
	return obj.(*v1alpha1.AwsAcmpcaCertificateAuthority), nil
}
