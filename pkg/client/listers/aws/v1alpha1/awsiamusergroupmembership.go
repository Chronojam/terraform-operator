/*
Copyright 2018 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/chronojam/terraform-operator/pkg/apis/aws/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsIamUserGroupMembershipLister helps list AwsIamUserGroupMemberships.
type AwsIamUserGroupMembershipLister interface {
	// List lists all AwsIamUserGroupMemberships in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.AwsIamUserGroupMembership, err error)
	// AwsIamUserGroupMemberships returns an object that can list and get AwsIamUserGroupMemberships.
	AwsIamUserGroupMemberships(namespace string) AwsIamUserGroupMembershipNamespaceLister
	AwsIamUserGroupMembershipListerExpansion
}

// awsIamUserGroupMembershipLister implements the AwsIamUserGroupMembershipLister interface.
type awsIamUserGroupMembershipLister struct {
	indexer cache.Indexer
}

// NewAwsIamUserGroupMembershipLister returns a new AwsIamUserGroupMembershipLister.
func NewAwsIamUserGroupMembershipLister(indexer cache.Indexer) AwsIamUserGroupMembershipLister {
	return &awsIamUserGroupMembershipLister{indexer: indexer}
}

// List lists all AwsIamUserGroupMemberships in the indexer.
func (s *awsIamUserGroupMembershipLister) List(selector labels.Selector) (ret []*v1alpha1.AwsIamUserGroupMembership, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AwsIamUserGroupMembership))
	})
	return ret, err
}

// AwsIamUserGroupMemberships returns an object that can list and get AwsIamUserGroupMemberships.
func (s *awsIamUserGroupMembershipLister) AwsIamUserGroupMemberships(namespace string) AwsIamUserGroupMembershipNamespaceLister {
	return awsIamUserGroupMembershipNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsIamUserGroupMembershipNamespaceLister helps list and get AwsIamUserGroupMemberships.
type AwsIamUserGroupMembershipNamespaceLister interface {
	// List lists all AwsIamUserGroupMemberships in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.AwsIamUserGroupMembership, err error)
	// Get retrieves the AwsIamUserGroupMembership from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.AwsIamUserGroupMembership, error)
	AwsIamUserGroupMembershipNamespaceListerExpansion
}

// awsIamUserGroupMembershipNamespaceLister implements the AwsIamUserGroupMembershipNamespaceLister
// interface.
type awsIamUserGroupMembershipNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsIamUserGroupMemberships in the indexer for a given namespace.
func (s awsIamUserGroupMembershipNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AwsIamUserGroupMembership, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AwsIamUserGroupMembership))
	})
	return ret, err
}

// Get retrieves the AwsIamUserGroupMembership from the indexer for a given namespace and name.
func (s awsIamUserGroupMembershipNamespaceLister) Get(name string) (*v1alpha1.AwsIamUserGroupMembership, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("awsiamusergroupmembership"), name)
	}
	return obj.(*v1alpha1.AwsIamUserGroupMembership), nil
}
