/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/chronojam/terraform-operator/pkg/apis/aws/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsEmrInstanceGroupLister helps list AwsEmrInstanceGroups.
type AwsEmrInstanceGroupLister interface {
	// List lists all AwsEmrInstanceGroups in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.AwsEmrInstanceGroup, err error)
	// AwsEmrInstanceGroups returns an object that can list and get AwsEmrInstanceGroups.
	AwsEmrInstanceGroups(namespace string) AwsEmrInstanceGroupNamespaceLister
	AwsEmrInstanceGroupListerExpansion
}

// awsEmrInstanceGroupLister implements the AwsEmrInstanceGroupLister interface.
type awsEmrInstanceGroupLister struct {
	indexer cache.Indexer
}

// NewAwsEmrInstanceGroupLister returns a new AwsEmrInstanceGroupLister.
func NewAwsEmrInstanceGroupLister(indexer cache.Indexer) AwsEmrInstanceGroupLister {
	return &awsEmrInstanceGroupLister{indexer: indexer}
}

// List lists all AwsEmrInstanceGroups in the indexer.
func (s *awsEmrInstanceGroupLister) List(selector labels.Selector) (ret []*v1alpha1.AwsEmrInstanceGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AwsEmrInstanceGroup))
	})
	return ret, err
}

// AwsEmrInstanceGroups returns an object that can list and get AwsEmrInstanceGroups.
func (s *awsEmrInstanceGroupLister) AwsEmrInstanceGroups(namespace string) AwsEmrInstanceGroupNamespaceLister {
	return awsEmrInstanceGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsEmrInstanceGroupNamespaceLister helps list and get AwsEmrInstanceGroups.
type AwsEmrInstanceGroupNamespaceLister interface {
	// List lists all AwsEmrInstanceGroups in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.AwsEmrInstanceGroup, err error)
	// Get retrieves the AwsEmrInstanceGroup from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.AwsEmrInstanceGroup, error)
	AwsEmrInstanceGroupNamespaceListerExpansion
}

// awsEmrInstanceGroupNamespaceLister implements the AwsEmrInstanceGroupNamespaceLister
// interface.
type awsEmrInstanceGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsEmrInstanceGroups in the indexer for a given namespace.
func (s awsEmrInstanceGroupNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AwsEmrInstanceGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AwsEmrInstanceGroup))
	})
	return ret, err
}

// Get retrieves the AwsEmrInstanceGroup from the indexer for a given namespace and name.
func (s awsEmrInstanceGroupNamespaceLister) Get(name string) (*v1alpha1.AwsEmrInstanceGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("awsemrinstancegroup"), name)
	}
	return obj.(*v1alpha1.AwsEmrInstanceGroup), nil
}
